|ROM_Demo
CLOCK_50 => pulsegenerator:PulseGenerator.clk
CLOCK_50 => addressgenerator:Counter.clk
KEY[0] => ~NO_FANOUT~
KEY[1] => ~NO_FANOUT~
KEY[2] => addressgenerator:Counter.reset
HEX3[0] << signdecoder:d3.decOut_n[0]
HEX3[1] << signdecoder:d3.decOut_n[1]
HEX3[2] << signdecoder:d3.decOut_n[2]
HEX3[3] << signdecoder:d3.decOut_n[3]
HEX3[4] << signdecoder:d3.decOut_n[4]
HEX3[5] << signdecoder:d3.decOut_n[5]
HEX3[6] << signdecoder:d3.decOut_n[6]
HEX2[0] << bin7segdecoder:d2.decOut_n[0]
HEX2[1] << bin7segdecoder:d2.decOut_n[1]
HEX2[2] << bin7segdecoder:d2.decOut_n[2]
HEX2[3] << bin7segdecoder:d2.decOut_n[3]
HEX2[4] << bin7segdecoder:d2.decOut_n[4]
HEX2[5] << bin7segdecoder:d2.decOut_n[5]
HEX2[6] << bin7segdecoder:d2.decOut_n[6]
HEX1[0] << bin7segdecoder:d1.decOut_n[0]
HEX1[1] << bin7segdecoder:d1.decOut_n[1]
HEX1[2] << bin7segdecoder:d1.decOut_n[2]
HEX1[3] << bin7segdecoder:d1.decOut_n[3]
HEX1[4] << bin7segdecoder:d1.decOut_n[4]
HEX1[5] << bin7segdecoder:d1.decOut_n[5]
HEX1[6] << bin7segdecoder:d1.decOut_n[6]
HEX0[0] << bin7segdecoder:d0.decOut_n[0]
HEX0[1] << bin7segdecoder:d0.decOut_n[1]
HEX0[2] << bin7segdecoder:d0.decOut_n[2]
HEX0[3] << bin7segdecoder:d0.decOut_n[3]
HEX0[4] << bin7segdecoder:d0.decOut_n[4]
HEX0[5] << bin7segdecoder:d0.decOut_n[5]
HEX0[6] << bin7segdecoder:d0.decOut_n[6]


|ROM_Demo|PulseGenerator:PulseGenerator
clk => s_cnt[0].CLK
clk => s_cnt[1].CLK
clk => s_cnt[2].CLK
clk => s_cnt[3].CLK
clk => s_cnt[4].CLK
clk => s_cnt[5].CLK
clk => s_cnt[6].CLK
clk => s_cnt[7].CLK
clk => s_cnt[8].CLK
clk => s_cnt[9].CLK
clk => s_cnt[10].CLK
clk => s_cnt[11].CLK
clk => s_cnt[12].CLK
clk => s_cnt[13].CLK
clk => s_cnt[14].CLK
clk => s_cnt[15].CLK
clk => s_cnt[16].CLK
clk => s_cnt[17].CLK
clk => s_cnt[18].CLK
clk => s_cnt[19].CLK
clk => s_cnt[20].CLK
clk => s_cnt[21].CLK
clk => s_cnt[22].CLK
clk => s_cnt[23].CLK
clk => s_cnt[24].CLK
clk => pulseOut~reg0.CLK
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => s_cnt.OUTPUTSELECT
reset => pulseOut.OUTPUTSELECT
pulseOut <= pulseOut~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ROM_Demo|AddressGenerator:Counter
clk => s_count[0].CLK
clk => s_count[1].CLK
clk => s_count[2].CLK
clk => s_count[3].CLK
clk => s_count[4].CLK
clk => s_count[5].CLK
clk => s_count[6].CLK
clk => s_count[7].CLK
reset => s_count.OUTPUTSELECT
reset => s_count.OUTPUTSELECT
reset => s_count.OUTPUTSELECT
reset => s_count.OUTPUTSELECT
reset => s_count.OUTPUTSELECT
reset => s_count.OUTPUTSELECT
reset => s_count.OUTPUTSELECT
reset => s_count.OUTPUTSELECT
enable => s_count[0].ENA
enable => s_count[1].ENA
enable => s_count[2].ENA
enable => s_count[3].ENA
enable => s_count[4].ENA
enable => s_count[5].ENA
enable => s_count[6].ENA
enable => s_count[7].ENA
count[0] <= s_count[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= s_count[1].DB_MAX_OUTPUT_PORT_TYPE
count[2] <= s_count[2].DB_MAX_OUTPUT_PORT_TYPE
count[3] <= s_count[3].DB_MAX_OUTPUT_PORT_TYPE
count[4] <= s_count[4].DB_MAX_OUTPUT_PORT_TYPE
count[5] <= s_count[5].DB_MAX_OUTPUT_PORT_TYPE
count[6] <= s_count[6].DB_MAX_OUTPUT_PORT_TYPE
count[7] <= s_count[7].DB_MAX_OUTPUT_PORT_TYPE


|ROM_Demo|TriangSignal_ROM_256x8:ROM
address[0] => Mux0.IN263
address[0] => Mux1.IN263
address[0] => Mux2.IN263
address[0] => Mux3.IN263
address[0] => Mux4.IN263
address[0] => Mux5.IN263
address[0] => Mux6.IN263
address[0] => Mux7.IN263
address[1] => Mux0.IN262
address[1] => Mux1.IN262
address[1] => Mux2.IN262
address[1] => Mux3.IN262
address[1] => Mux4.IN262
address[1] => Mux5.IN262
address[1] => Mux6.IN262
address[1] => Mux7.IN262
address[2] => Mux0.IN261
address[2] => Mux1.IN261
address[2] => Mux2.IN261
address[2] => Mux3.IN261
address[2] => Mux4.IN261
address[2] => Mux5.IN261
address[2] => Mux6.IN261
address[2] => Mux7.IN261
address[3] => Mux0.IN260
address[3] => Mux1.IN260
address[3] => Mux2.IN260
address[3] => Mux3.IN260
address[3] => Mux4.IN260
address[3] => Mux5.IN260
address[3] => Mux6.IN260
address[3] => Mux7.IN260
address[4] => Mux0.IN259
address[4] => Mux1.IN259
address[4] => Mux2.IN259
address[4] => Mux3.IN259
address[4] => Mux4.IN259
address[4] => Mux5.IN259
address[4] => Mux6.IN259
address[4] => Mux7.IN259
address[5] => Mux0.IN258
address[5] => Mux1.IN258
address[5] => Mux2.IN258
address[5] => Mux3.IN258
address[5] => Mux4.IN258
address[5] => Mux5.IN258
address[5] => Mux6.IN258
address[5] => Mux7.IN258
address[6] => Mux0.IN257
address[6] => Mux1.IN257
address[6] => Mux2.IN257
address[6] => Mux3.IN257
address[6] => Mux4.IN257
address[6] => Mux5.IN257
address[6] => Mux6.IN257
address[6] => Mux7.IN257
address[7] => Mux0.IN256
address[7] => Mux1.IN256
address[7] => Mux2.IN256
address[7] => Mux3.IN256
address[7] => Mux4.IN256
address[7] => Mux5.IN256
address[7] => Mux6.IN256
address[7] => Mux7.IN256
dataOut[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
dataOut[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
dataOut[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
dataOut[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
dataOut[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
dataOut[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
dataOut[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
dataOut[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ROM_Demo|Signed2BCD:Signed2BCD
dataIn[0] => data[0].DATAA
dataIn[0] => Add0.IN16
dataIn[1] => data[1].DATAA
dataIn[1] => Add0.IN15
dataIn[2] => data[2].DATAA
dataIn[2] => Add0.IN14
dataIn[3] => data[3].DATAA
dataIn[3] => Add0.IN13
dataIn[4] => data[4].DATAA
dataIn[4] => Add0.IN12
dataIn[5] => data[5].DATAA
dataIn[5] => Add0.IN11
dataIn[6] => data[6].DATAA
dataIn[6] => Add0.IN10
dataIn[7] => data[7].OUTPUTSELECT
dataIn[7] => data[6].OUTPUTSELECT
dataIn[7] => data[5].OUTPUTSELECT
dataIn[7] => data[4].OUTPUTSELECT
dataIn[7] => data[3].OUTPUTSELECT
dataIn[7] => data[2].OUTPUTSELECT
dataIn[7] => data[1].OUTPUTSELECT
dataIn[7] => data[0].OUTPUTSELECT
dataIn[7] => sign.DATAIN
dataIn[7] => Add0.IN9
unitsOut[0] <= Mod1.DB_MAX_OUTPUT_PORT_TYPE
unitsOut[1] <= Mod1.DB_MAX_OUTPUT_PORT_TYPE
unitsOut[2] <= Mod1.DB_MAX_OUTPUT_PORT_TYPE
unitsOut[3] <= Mod1.DB_MAX_OUTPUT_PORT_TYPE
decsOut[0] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
decsOut[1] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
decsOut[2] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
decsOut[3] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
centsOut[0] <= Div1.DB_MAX_OUTPUT_PORT_TYPE
centsOut[1] <= Div1.DB_MAX_OUTPUT_PORT_TYPE
centsOut[2] <= Div1.DB_MAX_OUTPUT_PORT_TYPE
centsOut[3] <= Div1.DB_MAX_OUTPUT_PORT_TYPE
sign <= dataIn[7].DB_MAX_OUTPUT_PORT_TYPE


|ROM_Demo|Bin7SegDecoder:d0
binInput[0] => Equal0.IN3
binInput[0] => Equal1.IN0
binInput[0] => Equal2.IN3
binInput[0] => Equal3.IN1
binInput[0] => Equal4.IN3
binInput[0] => Equal5.IN1
binInput[0] => Equal6.IN3
binInput[0] => Equal7.IN2
binInput[0] => Equal8.IN3
binInput[0] => Equal9.IN1
binInput[0] => Equal10.IN3
binInput[0] => Equal11.IN2
binInput[0] => Equal12.IN3
binInput[0] => Equal13.IN2
binInput[0] => Equal14.IN3
binInput[1] => Equal0.IN2
binInput[1] => Equal1.IN3
binInput[1] => Equal2.IN0
binInput[1] => Equal3.IN0
binInput[1] => Equal4.IN2
binInput[1] => Equal5.IN3
binInput[1] => Equal6.IN1
binInput[1] => Equal7.IN1
binInput[1] => Equal8.IN2
binInput[1] => Equal9.IN3
binInput[1] => Equal10.IN1
binInput[1] => Equal11.IN1
binInput[1] => Equal12.IN2
binInput[1] => Equal13.IN3
binInput[1] => Equal14.IN2
binInput[2] => Equal0.IN1
binInput[2] => Equal1.IN2
binInput[2] => Equal2.IN2
binInput[2] => Equal3.IN3
binInput[2] => Equal4.IN0
binInput[2] => Equal5.IN0
binInput[2] => Equal6.IN0
binInput[2] => Equal7.IN0
binInput[2] => Equal8.IN1
binInput[2] => Equal9.IN2
binInput[2] => Equal10.IN2
binInput[2] => Equal11.IN3
binInput[2] => Equal12.IN1
binInput[2] => Equal13.IN1
binInput[2] => Equal14.IN1
binInput[3] => Equal0.IN0
binInput[3] => Equal1.IN1
binInput[3] => Equal2.IN1
binInput[3] => Equal3.IN2
binInput[3] => Equal4.IN1
binInput[3] => Equal5.IN2
binInput[3] => Equal6.IN2
binInput[3] => Equal7.IN3
binInput[3] => Equal8.IN0
binInput[3] => Equal9.IN0
binInput[3] => Equal10.IN0
binInput[3] => Equal11.IN0
binInput[3] => Equal12.IN0
binInput[3] => Equal13.IN0
binInput[3] => Equal14.IN0
decOut_n[0] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[1] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[2] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[3] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[4] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[5] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[6] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE


|ROM_Demo|Bin7SegDecoder:d1
binInput[0] => Equal0.IN3
binInput[0] => Equal1.IN0
binInput[0] => Equal2.IN3
binInput[0] => Equal3.IN1
binInput[0] => Equal4.IN3
binInput[0] => Equal5.IN1
binInput[0] => Equal6.IN3
binInput[0] => Equal7.IN2
binInput[0] => Equal8.IN3
binInput[0] => Equal9.IN1
binInput[0] => Equal10.IN3
binInput[0] => Equal11.IN2
binInput[0] => Equal12.IN3
binInput[0] => Equal13.IN2
binInput[0] => Equal14.IN3
binInput[1] => Equal0.IN2
binInput[1] => Equal1.IN3
binInput[1] => Equal2.IN0
binInput[1] => Equal3.IN0
binInput[1] => Equal4.IN2
binInput[1] => Equal5.IN3
binInput[1] => Equal6.IN1
binInput[1] => Equal7.IN1
binInput[1] => Equal8.IN2
binInput[1] => Equal9.IN3
binInput[1] => Equal10.IN1
binInput[1] => Equal11.IN1
binInput[1] => Equal12.IN2
binInput[1] => Equal13.IN3
binInput[1] => Equal14.IN2
binInput[2] => Equal0.IN1
binInput[2] => Equal1.IN2
binInput[2] => Equal2.IN2
binInput[2] => Equal3.IN3
binInput[2] => Equal4.IN0
binInput[2] => Equal5.IN0
binInput[2] => Equal6.IN0
binInput[2] => Equal7.IN0
binInput[2] => Equal8.IN1
binInput[2] => Equal9.IN2
binInput[2] => Equal10.IN2
binInput[2] => Equal11.IN3
binInput[2] => Equal12.IN1
binInput[2] => Equal13.IN1
binInput[2] => Equal14.IN1
binInput[3] => Equal0.IN0
binInput[3] => Equal1.IN1
binInput[3] => Equal2.IN1
binInput[3] => Equal3.IN2
binInput[3] => Equal4.IN1
binInput[3] => Equal5.IN2
binInput[3] => Equal6.IN2
binInput[3] => Equal7.IN3
binInput[3] => Equal8.IN0
binInput[3] => Equal9.IN0
binInput[3] => Equal10.IN0
binInput[3] => Equal11.IN0
binInput[3] => Equal12.IN0
binInput[3] => Equal13.IN0
binInput[3] => Equal14.IN0
decOut_n[0] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[1] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[2] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[3] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[4] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[5] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[6] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE


|ROM_Demo|Bin7SegDecoder:d2
binInput[0] => Equal0.IN3
binInput[0] => Equal1.IN0
binInput[0] => Equal2.IN3
binInput[0] => Equal3.IN1
binInput[0] => Equal4.IN3
binInput[0] => Equal5.IN1
binInput[0] => Equal6.IN3
binInput[0] => Equal7.IN2
binInput[0] => Equal8.IN3
binInput[0] => Equal9.IN1
binInput[0] => Equal10.IN3
binInput[0] => Equal11.IN2
binInput[0] => Equal12.IN3
binInput[0] => Equal13.IN2
binInput[0] => Equal14.IN3
binInput[1] => Equal0.IN2
binInput[1] => Equal1.IN3
binInput[1] => Equal2.IN0
binInput[1] => Equal3.IN0
binInput[1] => Equal4.IN2
binInput[1] => Equal5.IN3
binInput[1] => Equal6.IN1
binInput[1] => Equal7.IN1
binInput[1] => Equal8.IN2
binInput[1] => Equal9.IN3
binInput[1] => Equal10.IN1
binInput[1] => Equal11.IN1
binInput[1] => Equal12.IN2
binInput[1] => Equal13.IN3
binInput[1] => Equal14.IN2
binInput[2] => Equal0.IN1
binInput[2] => Equal1.IN2
binInput[2] => Equal2.IN2
binInput[2] => Equal3.IN3
binInput[2] => Equal4.IN0
binInput[2] => Equal5.IN0
binInput[2] => Equal6.IN0
binInput[2] => Equal7.IN0
binInput[2] => Equal8.IN1
binInput[2] => Equal9.IN2
binInput[2] => Equal10.IN2
binInput[2] => Equal11.IN3
binInput[2] => Equal12.IN1
binInput[2] => Equal13.IN1
binInput[2] => Equal14.IN1
binInput[3] => Equal0.IN0
binInput[3] => Equal1.IN1
binInput[3] => Equal2.IN1
binInput[3] => Equal3.IN2
binInput[3] => Equal4.IN1
binInput[3] => Equal5.IN2
binInput[3] => Equal6.IN2
binInput[3] => Equal7.IN3
binInput[3] => Equal8.IN0
binInput[3] => Equal9.IN0
binInput[3] => Equal10.IN0
binInput[3] => Equal11.IN0
binInput[3] => Equal12.IN0
binInput[3] => Equal13.IN0
binInput[3] => Equal14.IN0
decOut_n[0] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[1] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[2] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[3] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[4] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[5] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[6] <= decOut_n.DB_MAX_OUTPUT_PORT_TYPE


|ROM_Demo|SignDecoder:d3
signInput => decOut_n[5].DATAIN
signInput => decOut_n[4].DATAIN
signInput => decOut_n[3].DATAIN
signInput => decOut_n[2].DATAIN
signInput => decOut_n[1].DATAIN
signInput => decOut_n[0].DATAIN
signInput => decOut_n[6].DATAIN
decOut_n[0] <= signInput.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[1] <= signInput.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[2] <= signInput.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[3] <= signInput.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[4] <= signInput.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[5] <= signInput.DB_MAX_OUTPUT_PORT_TYPE
decOut_n[6] <= signInput.DB_MAX_OUTPUT_PORT_TYPE


